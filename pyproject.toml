[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[project]
name = "offline-prefix-index"
version = "0.1.0"
description = "Offline prefix popularity indexer for KV cache planners."
readme = "README.md"
requires-python = ">=3.11"
authors = [{ name = "Offline Prefix Index Team" }]
license = { text = "Proprietary" }
dependencies = [
  "pydantic>=2.7.0,<3.0.0",
  "pyyaml>=6.0.1,<7.0.0",
  "fastapi>=0.116.2,<0.120.0",
  "starlette>=0.47.2,<0.48.0",
  "uvicorn[standard]>=0.32.0,<0.33.0",
]
keywords = ["llm", "cache", "prefix", "index"]

[project.optional-dependencies]
dev = [
  "black>=24.4.0",
  "ruff>=0.4.0",
  "mypy>=1.9.0",
  "pytest>=8.1.0",
  "pytest-cov>=5.0.0",
  "bandit>=1.7.9",
  "detect-secrets>=1.4.0",
  "pip-audit>=2.7.0",
  "types-PyYAML>=6.0.12.20240311",
  "httpx>=0.27.2,<0.28.0",
]

[project.scripts]
prefix-indexer = "prefix_indexer.cli:main"
prefix-indexer-http = "prefix_indexer.service_http:run"

[tool.hatch.build.targets.wheel]
packages = ["prefix_indexer"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
target-version = "py311"
src = ["prefix_indexer", "tests"]

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP", "DTZ"]
ignore = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["prefix_indexer"]

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
no_implicit_optional = true
strict_equality = true
ignore_missing_imports = false
plugins = ["pydantic.mypy"]
mypy_path = "."

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra --strict-markers --strict-config --cov=prefix_indexer --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["prefix_indexer"]

[tool.coverage.report]
show_missing = true
skip_empty = true
